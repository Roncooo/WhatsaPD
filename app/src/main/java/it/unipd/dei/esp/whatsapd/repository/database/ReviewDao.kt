package it.unipd.dei.esp.whatsapd.repository.database

import androidx.room.Dao
import androidx.room.Insert
import androidx.room.OnConflictStrategy
import androidx.room.Query


import kotlinx.coroutines.flow.Flow

/**
 * [ReviewDao] (Data Access Object) provides methods to access [Review] data.
 */
@Dao
interface ReviewDao {
	
	/**
	 * Returns [Review]s of [Poi] with id [poiName] in decreasing rating order.
	 * [poiName] must match an existing [Poi].
	 */
	@Query("SELECT * FROM REVIEW_TABLE WHERE LOWER(POI)=LOWER(:poiName) ORDER BY RATING DESC")
	fun getAllReviewsOfPoiByRating(poiName: String): Flow<List<Review>>
	
	/**
	 * Inserts [Review] in the database. Conflicts shouldn't happen because the primary key is autogenerated but
	 * if conflict happen the insertion is ignored.
	 */
	@Insert(onConflict = OnConflictStrategy.IGNORE)
	suspend fun insert(review: Review)
	
}
